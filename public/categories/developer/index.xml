<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer on My digital brain</title>
    <link>http://localhost:1313/quickstart/categories/developer/</link>
    <description>Recent content in Developer on My digital brain</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Mar 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/quickstart/categories/developer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting a verified user on Github</title>
      <link>http://localhost:1313/quickstart/posts/2020-03-27-getting-a-verified-user-on-github/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/quickstart/posts/2020-03-27-getting-a-verified-user-on-github/</guid>
      <description>When you create a new file directly on Github and push it to your branch, you will see in the commit, that this was done by an verified user.&#xA;If you push it from your command line, it normally looks like this:&#xA;But let&amp;rsquo;s start from the beginning! First of all: Github gives you a great Readme for this, that&amp;rsquo;s why I link it here were needed.</description>
    </item>
    <item>
      <title>Using MongoRepository with more than one sorting with Spring Boot</title>
      <link>http://localhost:1313/quickstart/posts/2019-09-09-using-mongorepository-with-more-than-one-sorting-with-spring/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/quickstart/posts/2019-09-09-using-mongorepository-with-more-than-one-sorting-with-spring/</guid>
      <description>Sometimes you need a List of the Database to be sorted by more than one column.&#xA;If you connect to your database with the org.springframework.data.mongodb.repository.MongoRepository you can only give oneÂ org.springframework.data.domain.Sort to a search method.&#xA;This is how the Repository class looks like:&#xA;@Repository public interface TestRepository extends MongoRepository&amp;lt;Test, Long&amp;gt; { public List&amp;lt;Score&amp;gt; findAllByTestName(String testName, Sort sort ); } test has some column &amp;ldquo;abc&amp;rdquo; and some column &amp;ldquo;def&amp;rdquo; and some &amp;ldquo;ghi&amp;rdquo; &amp;hellip;.</description>
    </item>
  </channel>
</rss>
